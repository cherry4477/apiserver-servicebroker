/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by apiregister-gen. Do not edit it manually!

package v1

import (
	"github.com/asiainfoldp/apiserver-servicebroker/pkg/apis/prd"
	"github.com/kubernetes-incubator/apiserver-builder/pkg/builders"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/runtime/schema"
	"k8s.io/apiserver/pkg/registry/rest"
)

var (
	prdBackingServiceStorage = builders.NewApiResource( // Resource status endpoint
		prd.InternalBackingService,
		BackingServiceSchemeFns{},
		func() runtime.Object { return &BackingService{} },     // Register versioned resource
		func() runtime.Object { return &BackingServiceList{} }, // Register versioned resource list
		&BackingServiceStrategy{builders.StorageStrategySingleton},
	)
	prdBackingServiceInstanceStorage = builders.NewApiResource( // Resource status endpoint
		prd.InternalBackingServiceInstance,
		BackingServiceInstanceSchemeFns{},
		func() runtime.Object { return &BackingServiceInstance{} },     // Register versioned resource
		func() runtime.Object { return &BackingServiceInstanceList{} }, // Register versioned resource list
		&BackingServiceInstanceStrategy{builders.StorageStrategySingleton},
	)
	prdServiceBrokerStorage = builders.NewApiResource( // Resource status endpoint
		prd.InternalServiceBroker,
		ServiceBrokerSchemeFns{},
		func() runtime.Object { return &ServiceBroker{} },     // Register versioned resource
		func() runtime.Object { return &ServiceBrokerList{} }, // Register versioned resource list
		&ServiceBrokerStrategy{builders.StorageStrategySingleton},
	)
	ApiVersion = builders.NewApiVersion("prd.asiainfo.com", "v1").WithResources(
		prdBackingServiceStorage,
		builders.NewApiResource( // Resource status endpoint
			prd.InternalBackingServiceStatus,
			BackingServiceSchemeFns{},
			func() runtime.Object { return &BackingService{} },     // Register versioned resource
			func() runtime.Object { return &BackingServiceList{} }, // Register versioned resource list
			&BackingServiceStatusStrategy{builders.StatusStorageStrategySingleton},
		), prdBackingServiceInstanceStorage,
		builders.NewApiResource( // Resource status endpoint
			prd.InternalBackingServiceInstanceStatus,
			BackingServiceInstanceSchemeFns{},
			func() runtime.Object { return &BackingServiceInstance{} },     // Register versioned resource
			func() runtime.Object { return &BackingServiceInstanceList{} }, // Register versioned resource list
			&BackingServiceInstanceStatusStrategy{builders.StatusStorageStrategySingleton},
		), builders.NewApiResourceWithStorage(
			prd.InternalBindingBackingServiceInstanceREST,
			builders.SchemeFnsSingleton,
			func() runtime.Object { return &Binding{} }, // Register versioned resource
			nil,
			func() rest.Storage {
				return &BindingBackingServiceInstanceREST{prd.NewBackingServiceInstanceRegistry(prdBackingServiceInstanceStorage)}
			},
		),
		prdServiceBrokerStorage,
		builders.NewApiResource( // Resource status endpoint
			prd.InternalServiceBrokerStatus,
			ServiceBrokerSchemeFns{},
			func() runtime.Object { return &ServiceBroker{} },     // Register versioned resource
			func() runtime.Object { return &ServiceBrokerList{} }, // Register versioned resource list
			&ServiceBrokerStatusStrategy{builders.StatusStorageStrategySingleton},
		))

	// Required by code generated by go2idl
	AddToScheme        = ApiVersion.SchemaBuilder.AddToScheme
	SchemeBuilder      = ApiVersion.SchemaBuilder
	localSchemeBuilder = &SchemeBuilder
	SchemeGroupVersion = ApiVersion.GroupVersion
)

// Required by code generated by go2idl
// Kind takes an unqualified kind and returns a Group qualified GroupKind
func Kind(kind string) schema.GroupKind {
	return SchemeGroupVersion.WithKind(kind).GroupKind()
}

// Required by code generated by go2idl
// Resource takes an unqualified resource and returns a Group qualified GroupResource
func Resource(resource string) schema.GroupResource {
	return SchemeGroupVersion.WithResource(resource).GroupResource()
}

//
// BackingService Functions and Structs
//
// +k8s:deepcopy-gen=false
type BackingServiceSchemeFns struct {
	builders.DefaultSchemeFns
}

// +k8s:deepcopy-gen=false
type BackingServiceStrategy struct {
	builders.DefaultStorageStrategy
}

// +k8s:deepcopy-gen=false
type BackingServiceStatusStrategy struct {
	builders.DefaultStatusStorageStrategy
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type BackingServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackingService `json:"items"`
}

//
// BackingServiceInstance Functions and Structs
//
// +k8s:deepcopy-gen=false
type BackingServiceInstanceSchemeFns struct {
	builders.DefaultSchemeFns
}

// +k8s:deepcopy-gen=false
type BackingServiceInstanceStrategy struct {
	builders.DefaultStorageStrategy
}

// +k8s:deepcopy-gen=false
type BackingServiceInstanceStatusStrategy struct {
	builders.DefaultStatusStorageStrategy
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type BackingServiceInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackingServiceInstance `json:"items"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type BindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Binding `json:"items"`
}

//
// ServiceBroker Functions and Structs
//
// +k8s:deepcopy-gen=false
type ServiceBrokerSchemeFns struct {
	builders.DefaultSchemeFns
}

// +k8s:deepcopy-gen=false
type ServiceBrokerStrategy struct {
	builders.DefaultStorageStrategy
}

// +k8s:deepcopy-gen=false
type ServiceBrokerStatusStrategy struct {
	builders.DefaultStatusStorageStrategy
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type ServiceBrokerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceBroker `json:"items"`
}
